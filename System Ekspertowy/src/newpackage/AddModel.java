/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.Writer;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Emil
 */
public class AddModel extends javax.swing.JFrame {

  /**
   * Creates new form AddRule
   */
  File modeleXML;

  public AddModel(File modeleXML) {
    this.modeleXML = modeleXML;
    initComponents();
    setVisible(true);
    setLocationRelativeTo(null);
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    //System.out.println(findLastModel(regulyXML));
  }

  private int findLastModel(File regulyXML) {// znajdowanie lini ostatniego modelu
    int lastLine = 0;
    try (Scanner s = new Scanner(regulyXML)) {

      int i = 0;
      while (s.hasNextLine()) {
        i++;
        if (s.nextLine().contains("</model>")) {
          lastLine = i;
        }
      }
      s.close();
    } catch (FileNotFoundException ex) {

      Logger.getLogger(AddModel.class.getName()).log(Level.SEVERE, null, ex);
      JOptionPane.showMessageDialog(null, "Nie można odczytać pliku");
    }

    return lastLine;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jCheckBox1 = new javax.swing.JCheckBox();
    jButton1 = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jTextField2 = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    jTextField3 = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    jTextField4 = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox();
    jComboBox2 = new javax.swing.JComboBox();
    jLabel8 = new javax.swing.JLabel();
    jTextField5 = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setText("Numer:");

    jCheckBox1.setText("reguła rozszerzona");
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jCheckBox1ActionPerformed(evt);
      }
    });

    jButton1.setText("Dodaj");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jLabel2.setText("Wniosek:");

    jLabel3.setText("Argument:");

    jLabel4.setText("Parametr pierwszy:");

    jLabel5.setText("Parametr drugi:");

    jTextField4.setEnabled(false);

    jLabel6.setText("Operator pierwszy:");

    jLabel7.setText("Operator drugi:");

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=" }));

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=" }));
    jComboBox2.setEnabled(false);

    jLabel8.setText("Prawdopodobieństwo:");

    jTextField5.setText("1");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jTextField2))
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addComponent(jCheckBox1)
            .addComponent(jLabel1)
            .addGroup(layout.createSequentialGroup()
              .addComponent(jLabel2)
              .addGap(18, 18, 18)
              .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                  .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addComponent(jLabel8)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGap(18, 18, 18)
              .addComponent(jButton1))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jCheckBox1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel6)
          .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel7)
          .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButton1)
          .addComponent(jLabel8)
          .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
      if (jCheckBox1.isSelected()) {      // rozszerzony/prosty
        jTextField4.setEnabled(true);
        jComboBox2.setEnabled(true);
      } else {
        jTextField4.setEnabled(false);
        jComboBox2.setEnabled(false);
      }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
  //dodawnie modelu
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      int last = findLastModel(modeleXML);
      String plik = "";
      String model = "";
      int modelCount = 1;

      //dopisywanie modelu do pliku
      try (Scanner s = new Scanner(modeleXML)) {

        System.out.println(plik);
        String linia;
        for (int i = 0; i < last; i++) {
          linia = s.nextLine();
          plik += linia;
          if (linia.contains("</nr>")) {
            linia = linia.replaceAll("</nr>", "");
            linia = linia.replaceAll("<nr>", "");
            modelCount = Integer.parseInt(linia.trim());
            modelCount++;
          }
          plik += "\n";
          plik += model;
        }
        s.close();
        plik += "\n";
      } catch (FileNotFoundException ex) {
        JOptionPane.showMessageDialog(null, "Nie można odczytać pliku");
        Logger.getLogger(AddModel.class.getName()).log(Level.SEVERE, null, ex);
      }

      //zapisywanie modelu do stringa
      if (!jCheckBox1.isSelected()) {    //model prosty
        model += "  <model typ=\"prosty\">\r\n";
        model += "	<nr>" + modelCount + "</nr>\r\n";
        model += "    <wniosek>" + jTextField1.getText() + "</wniosek>\r\n";
        model += "	<operatory>\r\n";

        switch (jComboBox1.getSelectedIndex()) {
          case 0:
            model += "		<operator> &gt; </operator> \r\n";//tu poprawić
            break;
          case 1:
            model += "		<operator> &lt; </operator> \r\n";//tu poprawić
            break;
          case 2:
            model += "		<operator> &gt; = </operator> \r\n";//tu poprawić
            break;
          case 3:
            model += "		<operator> &lt; =</operator> \r\n";//tu poprawić
            break;

        }


        model += "	</operatory>\r\n";
        model += "	<parametry>\n";
        model += "		<parametr>" + jTextField3.getText() + "</parametr> \r\n";
        model += "	</parametry>\r\n";
        model += "	<cf>" + jTextField5.getText() + "</cf>\r\n";
        model += "  </model>\r\n";
        model += "</modele>\r\n";

      } else {                          //model rozszerzony
        model += "  <model typ=\"rozszerzony\">\r\n";
        model += "	<nr>" + modelCount + "</nr>\r\n";
        model += "    <wniosek>" + jTextField1.getText() + "</wniosek>\r\n";
        model += "	<operatory>\r\n";
        
        switch (jComboBox1.getSelectedIndex()) {
          case 0:
            model += "		<operator> &gt; </operator> \r\n";//tu poprawić
            break;
          case 1:
            model += "		<operator> &lt; </operator> \r\n";//tu poprawić
            break;
          case 2:
            model += "		<operator> &gt; = </operator> \r\n";//tu poprawić
            break;
          case 3:
            model += "		<operator> &lt; =</operator> \r\n";//tu poprawić
            break;

        }
        
        switch (jComboBox2.getSelectedIndex()) {
          case 0:
            model += "		<operator> &gt; </operator> \r\n";//tu poprawić
            break;
          case 1:
            model += "		<operator> &lt; </operator> \r\n";//tu poprawić
            break;
          case 2:
            model += "		<operator> &gt; = </operator> \r\n";//tu poprawić
            break;
          case 3:
            model += "		<operator> &lt; =</operator> \r\n";//tu poprawić
            break;

        }
        model += "	</operatory>\r\n";
        model += "	<parametry>\r\n";
        model += "		<parametr>" + jTextField3.getText() + "</parametr> \r\n";
        model += "		<parametr>" + jTextField4.getText() + "</parametr> \r\n";
        model += "	</parametry>\r\n";
        model += "	<cf>" + jTextField5.getText() + "</cf>\r\n";
        model += "  </model>\r\n";
        model += "</modele>\r\n";
      }
      plik += model;
      System.out.println(plik);
      try {
        FileWriter f = new FileWriter(modeleXML);
        f.write(plik);
        f.close();
        JOptionPane.showMessageDialog(null, "Pomyślnie dodano model");
        setVisible(false);
        dispose();
      } catch (IOException ex) {
        Logger.getLogger(AddModel.class.getName()).log(Level.SEVERE, null, ex);
      }


    }//GEN-LAST:event_jButton1ActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JCheckBox jCheckBox1;
  private javax.swing.JComboBox jComboBox1;
  private javax.swing.JComboBox jComboBox2;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JTextField jTextField1;
  private javax.swing.JTextField jTextField2;
  private javax.swing.JTextField jTextField3;
  private javax.swing.JTextField jTextField4;
  private javax.swing.JTextField jTextField5;
  // End of variables declaration//GEN-END:variables
}
